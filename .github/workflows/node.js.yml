name: CI - Test, Build and Deploy with Vercel Hook

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run test
      - run: npm run build
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    env:
      VERCEL_DEPLOY_HOOK_URL: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Trigger Vercel Deploy Hook
        id: trigger_deploy
        run: |
          echo "Triggering Vercel deploy..."
          response=$(curl -s -w "%{http_code}" -X POST $VERCEL_DEPLOY_HOOK_URL)
          http_code="${response: -3}"
          body="${response::-3}"

          echo "Response code: $http_code"
          echo "Response body: $body"

          if [ "$http_code" != "201" ]; then
            echo "Failed to trigger deploy"
            exit 1
          fi

      - name: Wait for Vercel Deploy to Complete
        run: |
          echo "Waiting for deploy to complete (max 2 minutes)..."
          max_attempts=24
          attempt=0

          while [ $attempt -lt $max_attempts ]; do
            sleep 5

            deployment_response=$(curl -s -H "Authorization: Bearer $VERCEL_TOKEN" "https://api.vercel.com/v6/deployments?projectId=$VERCEL_PROJECT_ID&limit=1")

            state=$(echo "$deployment_response" | jq -r '.deployments[0].state')
            deployment_id=$(echo "$deployment_response" | jq -r '.deployments[0].uid')

            echo "Deployment ID: $deployment_id"
            echo "Deploy status: $state"

            if [ "$state" = "READY" ]; then
              echo "Deploy succeeded!"
              exit 0
            fi

            if [ "$state" = "ERROR" ]; then
              echo "Deploy failed!"
              exit 1
            fi

            attempt=$((attempt + 1))
          done

          echo "Deploy did not complete in expected time (2 minutes)"
          exit 1
